name: SharedKernel CI/CD Pipeline

on:
  push:
    paths: [ 'SharedKernel/src/**' ]
  pull_request:
    paths: [ 'SharedKernel/src/**' ]
  workflow_dispatch:

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.tag_generator.outputs.new_version }}
    steps:
      - name: Data gatherer
        id: data_gatherer
        shell: pwsh
        run: |
          # Get default branch
          $repo = "${{ github.repository }}"
          $defaultBranch = Invoke-RestMethod -Method GET -Uri https://api.github.com/repos/$repo | Select-Object -ExpandProperty default_branch
          Write-Output "::set-output name=default_branch::$(echo $defaultBranch)"

      - name: Conditionals handler
        id: conditionals_handler
        shell: pwsh
        run: |
          $defaultBranch = "${{ steps.data_gatherer.outputs.default_branch }}"
          $githubRef = "${{ github.ref }}"
          $currentBranch = $githubRef -replace 'refs/heads/', ''
          $isDefaultBranch = 'false'

          if ( $currentBranch -eq $defaultBranch ) {
            $isDefaultBranch = 'true'
          }
          
          Write-Output "::set-output name=is_default_branch::$(echo $isDefaultBranch)"

      - name: Setup .NET Core
        id: setup_dotnet_core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.301

      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - if: steps.conditionals_handler.outputs.is_default_branch == 'true'
        name: Bump GH tag
        id: tag_generator
        uses: mathieudutour/github-tag-action@v5.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          release_branches: ${{ steps.data_gatherer.outputs.default_branch }}

      - name: Build solution
        id: build_solution
        shell: pwsh
        run: |
          dotnet build .\SharedKernel\SharedKernel.sln --configuration Release --output Artifacts

      - name: Run unit tests
        id: run_unit_tests
        shell: pwsh
        run: |
          dotnet test .\SharedKernel\SharedKernel.sln --configuration Release --no-build --output Artifacts

      - if: steps.tag_generator.outputs.new_version != ''
        name: Create NuGet Package
        id: create_nuget_package
        shell: pwsh
        run: |
          nuget pack .\SharedKernel\src\PluralsightDdd.SharedKernel\PluralsightDdd.SharedKernel.csproj `
          -OutputDirectory NuGet `
          -Properties "Configuration=Release;Version=${{ steps.tag_generator.outputs.new_version }}"

      - if: steps.tag_generator.outputs.new_version != ''
        name: Upload build artifacts
        id: upload_build_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: Artifacts/

      - if: steps.tag_generator.outputs.new_version != ''
        name: Upload NuGet packages
        id: upload_nuget_packages
        uses: actions/upload-artifact@v2
        with:
          name: NuGet packages
          path: NuGet/

  cd:
    if: needs.ci.outputs.latest_version != ''
    name: Continuous Deployment
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download NuGet packages
        id: download_artifacts
        uses: actions/download-artifact@v2
        with:
          name: NuGet packages
          path: NuGet/

      - name: Publish to NuGet
        id: publish_to_nuget
        shell: pwsh
        run: |
          nuget push NuGet/PluralsightDdd.SharedKernel.${{ needs.ci.outputs.latest_version }}.nupkg `
          -Source https://api.nuget.org/v3/index.json `
          -ApiKey ${{ secrets.NUGET_API_KEY }}

      - name: Create and publish release
        id: create_release
        shell: pwsh
        run: |
          $releaseTag = "v${{ needs.ci.outputs.latest_version }}"
          $releaseTitle = "PluralsightDdd.SharedKernel v${{ needs.ci.outputs.latest_version }}"
          $releaseAssets = 'NuGet/PluralsightDdd.SharedKernel.${{ needs.ci.outputs.latest_version }}.nupkg'

          gh release create $releaseTag --title $releaseTitle $releaseAssets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
